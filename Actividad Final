#include <windows.h>
#include <sql.h>
#include <sqlext.h>
#include <iostream>
#include <iomanip>
using namespace std;
int main() {
    SQLHENV hEnv;
    SQLHDBC hDbc;
    SQLRETURN ret;
    // Asignar un gestor de entorno
    ret = SQLAllocHandle(SQL_HANDLE_ENV, SQL_NULL_HANDLE, &hEnv);
    ret = SQLSetEnvAttr(hEnv, SQL_ATTR_ODBC_VERSION, (SQLPOINTER)SQL_OV_ODBC3, 0);
    // Asignar un gestor de conexión
    ret = SQLAllocHandle(SQL_HANDLE_DBC, hEnv, &hDbc);
    // Conectarse a la base de datos
    ret = SQLConnect(hDbc, (SQLWCHAR*)L"sqlserver", SQL_NTS, (SQLWCHAR*)L"Username", SQL_NTS, (SQLWCHAR*)L"Password", SQL_NTS);
    if (ret == SQL_SUCCESS || ret == SQL_SUCCESS_WITH_INFO) {
       // cout << "Conectado a la base de datos exitosamente." << endl;
        
        SQLHSTMT hStmt;
        ret = SQLAllocHandle(SQL_HANDLE_STMT, hDbc, &hStmt);
        wcout << L"+-------------+--------------------------------+------------------+--------------+------------------------------+---------------------------------------------------+------------+ " << endl;
        wcout << L"|No. Empleado | Nombre                         | Fecha Nacimiento | RFC          | Nombre Centro                | Descripcion Puesto                                | Directivo  | " << endl;
        wcout << L"+-------------+--------------------------------+------------------+--------------+------------------------------+---------------------------------------------------+------------+ " << endl;
        /*
        wcout << L"+------------+------------------------+------------+ " << endl;
        wcout << L"| No. Centro | Nombre Centro          | Ciudad     | " << endl;
        wcout << L"+------------+------------------------+------------+ " << endl;
        wcout << L"+------------+------------------------+------------+ " << endl;

        wcout << L"+------------+------------------------+--------------------------------------------+ " << endl;
        wcout << L"| ID Puesto  | Nombre Puesto          | Descripcion Puesto                         | " << endl;
        wcout << L"+------------+------------------------+--------------------------------------------+ " << endl;
        wcout << L"+------------+------------------------+--------------------------------------------+ " << endl;

        wcout << L"+--------------+------------------------------+----------------+ " << endl;
        wcout << L"| No. Empleado | No. Centro Supervisa         | Combustible    | " << endl;
        wcout << L"+--------------+------------------------------+----------------+ " << endl;
        wcout << L"+--------------+------------------------------+----------------+ " << endl;
        */
        
        //Select a la base de datos
        ret = SQLExecDirect(hStmt, (SQLWCHAR*)L"SELECT * FROM Empleados E INNER JOIN Centros C ON C.numeroCentro = E.numeroCentro INNER JOIN Puestos P ON P.idPuesto = E.idPuesto", SQL_NTS);
        if (ret == SQL_SUCCESS || ret == SQL_SUCCESS_WITH_INFO) {
            int num_empleado;
            SQLWCHAR nombre[50];
            SQLWCHAR apellidoPaterno[50];
            SQLWCHAR apellidoMaterno[50];
            SQLWCHAR fechaNacimiento[50];
            SQLWCHAR RFC[13];
            SQLWCHAR nombreCentro[50];
            SQLWCHAR descripcionPuesto[50];
            SQLWCHAR directivo[50];


            while (SQLFetch(hStmt) == SQL_SUCCESS) {
                SQLGetData(hStmt, 1, SQL_C_LONG, &num_empleado, 0, NULL);
                SQLGetData(hStmt, 2, SQL_C_WCHAR, nombre, sizeof(nombre), NULL);
                SQLGetData(hStmt, 3, SQL_C_WCHAR, apellidoPaterno, sizeof(apellidoPaterno), NULL);
                SQLGetData(hStmt, 4, SQL_C_WCHAR, apellidoMaterno, sizeof(apellidoMaterno), NULL);
                SQLGetData(hStmt, 5, SQL_C_WCHAR, fechaNacimiento, sizeof(fechaNacimiento), NULL);
                SQLGetData(hStmt, 6, SQL_C_WCHAR, RFC, sizeof(RFC), NULL);
                SQLGetData(hStmt, 9, SQL_C_WCHAR, directivo, sizeof(directivo), NULL);
                SQLGetData(hStmt, 11, SQL_C_WCHAR, nombreCentro, sizeof(nombreCentro), NULL);
                SQLGetData(hStmt, 15, SQL_C_WCHAR, descripcionPuesto, sizeof(descripcionPuesto), NULL);
                

                wstring concatenar = wstring(nombre) + L" " + wstring(apellidoPaterno) + L" " + wstring(apellidoMaterno);
                wstring direc_string = wstring(directivo);
                wstring respuestaDirectivo;

                if (direc_string == L"1"){
                    respuestaDirectivo = L"SI";
                }
                else {
                    respuestaDirectivo = L"NO";

                }
               
              
              wcout << L"| " << setw(12) << left << num_empleado << L"| " << setw(31) << left << concatenar
                    << L"| " << setw(17) << left << fechaNacimiento << L"| " << setw(13) << left << RFC
                    << L"| " << setw(29) << left << nombreCentro << L"| " << setw(50) << left << descripcionPuesto
                    << L"| " << setw(11) << left << respuestaDirectivo << L"| " << endl;
            }
            wcout << L"+-------------+--------------------------------+------------------+--------------+------------------------------+---------------------------------------------------+------------+ " << endl;
        }
        // Liberar el manejador de conexión
        SQLFreeHandle(SQL_HANDLE_STMT, hStmt);
    }
    else {
        cout << "Fallo la conexion a la base de datos" << endl;
    }
    // Desconectar y liberar gestores de entorno
    SQLDisconnect(hDbc);
    SQLFreeHandle(SQL_HANDLE_DBC, hDbc);
    SQLFreeHandle(SQL_HANDLE_ENV, hEnv);
    return 0;
}
